{"version":3,"sources":["components/SignIn.js","components/SignUp.js","config.js","components/Home.js","components/CommentPanel.js","components/Feed.js","components/UserProfile.js","components/EditEvent.js","components/Events.js","components/EditProfile.js","components/EventCard.js","components/CreateEvent.js","components/Footer.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","Message","attached","header","Form","onSubmit","onSignIn","className","Group","widths","Input","label","placeholder","type","name","Button","color","warning","Icon","href","SignUp","content","onSignUp","Checkbox","inline","API_URL","process","Home","width","src","alt","to","CommentPanel","state","likesCounter","feed","likes","length","comments","image","userAvatar","doShowSubComments","newComment","createdby","typeComment","updateNewComment","e","setState","target","value","axios","put","this","_id","withCredentials","then","catch","err","console","log","prevState","Comment","map","elem","class","Avatar","as","Content","Author","username","Metadata","moment","createAt","format","Text","comment","Actions","reply","TextArea","onChange","onClick","addComment","labelPosition","icon","primary","clickComment","showSubComments","window","location","url","description","clickLikes","basic","pointing","Component","Feed","feeds","id","getFeed","handleTextChange","updatedComment","get","res","data","post","Container","centered","Card","fluid","for","rows","role","aria-label","handleButtonText","handleButtonVideo","sendComment","UserProfile","user","handleDelete","delete","history","push","getUser","error","margin","Image","wrapped","ui","Header","Meta","createdAt","Description","email","city","extra","EditEvent","event","handleEdit","preventDefault","topics","onClose","handlenameChange","eventEdited","JSON","parse","stringify","handletopicsChange","handleimageChange","handleCityChange","Responsive","Segment","minWidth","maxWidth","htmlFor","React","Events","events","filteredEvents","loggedInUser","showEditEvent","handleSearch","searchText","currentTarget","filteredAll","filter","toLowerCase","includes","handleMyEvents","handleAllEvents","getAttribute","getEvents","response","status","input","ButtonGroup","variant","CardGroup","Img","Body","Title","date","Footer","EditProfile","handleUsernameChange","userEdited","handleEmailChange","handleAvatarChange","EventCard","eventId","match","params","show","text","handleClose","handleShow","place","information","numberOfPeople","Modal","onHide","closeButton","CreateEvent","handleSubmit","handleInput","onImageChange","files","img","URL","createObjectURL","Date","bind","Row","Grid","Column","inverted","NavBar","Navbar","collapseOnSelect","expand","bg","height","loading","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Divider","Link","onLogout","App","handleSignIn","password","handleSignUp","handleLogOut","exact","path","render","routeProps","withRouter","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2acd6de9.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, Icon, Message } from 'semantic-ui-react'\n\nexport default function SignIn(props) {\n\n\n    return (\n        <div>\n        <Message\n        attached\n        header='Log In'\n       \n      />\n     \n      <Form onSubmit={props.onSignIn} className='attached fluid segment'>\n        <Form.Group widths='equal'>\n        </Form.Group>\n       \n        <Form.Input label='Email' placeholder='Email' type='Email' name='email'/>\n        <Form.Input label='Password' type='password' name=\"password\" />\n       \n\n        \n        <Button type=\"submit\" color='yellow'>Log In</Button>\n      </Form>\n      \n      <Message attached='bottom' warning>\n        <Icon name='help' />\n        Still don't have an account?&nbsp;<a href='/signup'>Sign up here</a>&nbsp;instead.\n      </Message>\n   \n    </div>\n    )\n}","import React from 'react';\nimport { Button, Form, Icon, Message } from 'semantic-ui-react'\n\n\nexport default function SignUp(props){\n    return (\n        <div>\n        <Message\n        attached\n        header='Welcome to our site!'\n        content='Fill out the form below to sign-up for a new account'\n      />\n     \n      <Form onSubmit={props.onSignUp} className='attached fluid segment'>\n        <Form.Group widths='equal'>\n        </Form.Group>\n        <Form.Input label='Username' placeholder='Username' type='text'name='username' />\n        <Form.Input label='Email' placeholder='Email' type='Email' name='email'/>\n        <Form.Input label='Password' type='password' name=\"password\" />\n        <Form.Input label='User Avatar' type='url' name=\"avatar\" />\n\n        <Form.Checkbox inline label='I agree to the terms and conditions' />\n        <Button type=\"submit\" color='yellow'>Register now!</Button>\n      </Form>\n      \n      <Message attached='bottom' warning>\n        <Icon name='help' />\n        Already signed up?&nbsp;<a href='/signin'>Login here</a>&nbsp;instead.\n      </Message>\n   \n    </div>\n    \n\n    )\n}","// export const API_URL = 'http://localhost:5000/api'  //this is for work in local\nexport const API_URL = process.env.REACT_APP_API_URL //this is for do the deployment, heroku","import React from 'react'\nimport { Link } from \"react-router-dom\";\n// import { Card, CardGroup, Card.Footer, Icon, Image, Container } from 'semantic-ui-react'\n\n\nfunction Home() {\n    return (\n        <div>\n           <img width=\"100%\" src=\"layout.png\" alt=\"\"></img>\n        {/* <h3>Register for free now!</h3> */}\n\n        \n        <Link to=\"/signup\">\n                    <button type=\"button\" className=\"btn btn-secondary mt-4\">Join us!</button>\n        </Link>\n\n\n        </div>\n\n    )\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { API_URL } from '../config'\nimport ReactLinkify from 'react-linkify'\nimport { Button, Comment, Form, Container, Card } from 'semantic-ui-react'\nimport moment from 'moment' //for change the format date \nimport ReactPlayer from \"react-player\" //for be able to share url videos\n// import { FacebookShareButton, WhatsappShareButton, LinkedinShareButton, LinkedinIcon, FacebookIcon, TwitterShareButton, FacebookShareCount, shareUrl } from \"react-share\" //this is an API for be able to share post or events in social media  \n\n\n\nimport Clock from 'moment'\n\nclass CommentPanel extends Component {\n    state = {\n        likesCounter: this.props.feed.likes.length,\n        comments: this.props.feed.comments,\n        image: this.props.feed.userAvatar,\n        doShowSubComments: false,\n        newComment: '',\n        feed: { createdby: \"\" }, //for show the name of the user who creates it\n        typeComment: 'text'\n\n\n    }\n\n\n\n    clickLikes() {\n        axios.put(`${API_URL}/feed/${this.props.feed._id}/addlike`, {}, { withCredentials: true })\n            .then(() => {\n                this.setState({\n                    likesCounter: this.state.likesCounter + 1\n\n                })\n            })\n            .catch((err) => {\n                console.log('An error ocurred: ' + err);\n            })\n    }\n\n\n\n\n    //      // method to show/hide form to add new comments\n\n    clickComment() {\n        // showComments\n        this.setState((prevState) => {\n            return ({\n                doShowSubComments: !prevState.doShowSubComments\n            })\n        })\n    }\n    //for update the comment\n\n\n    updateNewComment = (e) => {\n        this.setState({\n            newComment: e.target.value\n        })\n    }\n\n    //for see the sub comments of the feed (panel)\n    showSubComments() {\n        console.log(\"running showSubComments\")\n        return (\n            <div>\n\n                <div className=\"comment-list mt-4\">\n                    <>\n                        <Comment.Group>\n                            {\n                                this.props.feed.comments.map((elem) => {\n                                    return (\n\n\n                                        <div class=\"pointer-border\">\n                                            <Comment>\n                                                <Comment.Avatar as='a' src={elem.createdby && elem.createdby.userAvatar} />\n                                                <Comment.Content>\n                                                    <Comment.Author>created by {elem.createdby.username}</Comment.Author>\n                                                    <Comment.Metadata>\n                                                        <div>{moment(elem.createAt).format('DD/MM/YYYY')}</div>\n                                                    </Comment.Metadata>\n                                                    <Comment.Text>{\n                                                        elem.comment}\n\n\n\n                                                    </Comment.Text>\n                                                    <Comment.Actions>\n                                                        {/* <Comment.Action>Reply</Comment.Action> */}\n                                                    </Comment.Actions>\n                                                </Comment.Content>\n\n                                            </Comment>\n\n                                        </div>\n\n                                    )\n\n                                })\n                            }\n                        </Comment.Group>\n                        <Form reply>\n                            <Form.TextArea onChange={this.updateNewComment} />\n                            <Button onClick={() => this.props.addComment(this.props.feed._id, this.state.newComment)} content='Add Comment' labelPosition='left' icon='edit' primary />\n                        </Form>\n                    </>\n                </div>\n            </div>\n        )\n\n    }\n\n    comments() {\n        console.log(\"comment clicked\")\n        const { doShowSubComments } = this.state\n        console.log(doShowSubComments)\n        return (\n            <div>\n                <div className= \"mt-2\">\n                    <button onClick={() => this.clickComment()} className=\"btn btn-warning\" type=\"button\">Comments</button>\n                </div>\n                {doShowSubComments && this.showSubComments()}\n            </div>\n        )\n    }\n\n\n\n    render() {\n        const { feed } = this.props\n        const { likesCounter } = this.state\n        console.log(feed)\n        let shareUrl = window.location.href;\n\n        return (\n            <div>\n                <div class=\"card gedf-card mr-5 mt-5 ml-5\">\n                    <div class=\"card-header\">\n                        <div class=\"d-flex justify-content-between align-items-center\">\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <div class=\"mr-2\">\n                                    <img class=\"rounded-circle\" width=\"45\" src={feed.createdby && feed.createdby.userAvatar} alt=\"\" />\n                                </div>\n                                <div class=\"ml-2\">\n                                    <div class=\"h5 m-0\">{feed.createdby.username}</div>\n                                    <div class=\"h7 text-muted\">{feed.name}</div>\n                                </div>\n                            </div>\n                            <div>\n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div class=\"card-body\">\n                    <div class=\"text-muted h7 mb-2\"> <i class=\"fa fa-clock-o\"></i> {moment(feed.createAt).format('DD/MM/YYYY')}</div>\n\n                    <p class=\"card-text\">\n                        {feed.typeComment === \"video\" ?\n                            <card>\n                                <ReactPlayer\n\n                                    width=\"100%\"\n\n\n                                    url={feed.description}\n\n                                />\n                            </card>\n                            : (\n                                (\n                                    <ReactLinkify> {feed.description} </ReactLinkify>)\n                            )\n\n                        }\n                    </p>\n\n\n                    <div class=\"align-center\">\n\n                        <div className = \"mt-2\">\n                        <Button onClick={() => this.clickLikes()}\n                            color='red'\n                            \n                            content='Like'\n                            icon='heart'\n                            label={{ basic: true, color: 'red', pointing: 'left', content: <div>{likesCounter}</div> }}\n                        />\n                        </div>\n                        {this.comments()}\n                        {/* <LinkedinShareButton url={`${shareUrl}`}>\n\n                            <LinkedinIcon size={32} round={true} />\n\n                        </LinkedinShareButton>\n                        <FacebookShareButton url={`${shareUrl}`}>\n\n                            <FacebookIcon size={32} round={true} />\n\n                        </FacebookShareButton>\n                         */}\n\n                    </div>\n\n\n                </div >\n            </div>\n\n\n\n\n\n        )\n    }\n\n\n}\n\nexport default CommentPanel;","import React, { Component } from 'react'\nimport CommentPanel from './CommentPanel'\nimport { API_URL } from '../config'\nimport axios from 'axios'\nimport { Card, Container } from 'semantic-ui-react'\n\nexport class Feed extends Component {\n\n    state = {\n        description: \"\",\n        feeds: [],\n        feed: { createdby: \"\" },\n        \n    }\n\n    componentDidMount() {\n        //aqui voy a colocar la ruta que conecte al backend, aqui va el axios con el /feed\n        this.getFeed();\n    }\n\n    getFeed() {\n\n        axios.get(`${API_URL}/feed`, { withCredentials: true })\n            .then((res) => {\n                this.setState({\n                    feeds: res.data\n                })\n\n            })\n            .catch((err) => {\n                console.log('An error ocurred: ' + err);\n            })\n    }\n\n    /**\n     * Enviar al servidor\n     */\n    sendComment() {\n        axios.post(`${API_URL}/feed/create`, { description: this.state.description, typeComment: this.state.typeComment,  }, { withCredentials: true })\n            .then(() => {\n                this.getFeed();\n            })\n            .catch((err) => {\n                console.log('An error ocurred: ' + err);\n            })\n    }\n\n    addComment = (id, comment) => {\n        console.log(id, comment)\n        axios.put(`${API_URL}/feed/${id}/addcomment`, { comment }, { withCredentials: true })\n            .then(() => {\n                this.getFeed()\n            })\n    }\n\n\n    handleTextChange = (e) => {\n        let updatedComment = e.target.value\n        this.setState({\n            description: updatedComment\n        })\n    }\n\n    showThecomments() {\n        this.setState({\n            // feeds: FeedStore.getAll()\n        })\n    }\n\n    //Button text, video and image, these functions will make the buttons only show for each type of text, making also a ternary conditional in EventsCards(155)\n    handleButtonText(){\n        this.setState({\n            typeComment: \"text\"\n        })\n    }\n\n    handleButtonVideo(){\n        this.setState({\n            typeComment: \"video\"\n        })\n    }\n\n    handleButtonImage(){\n        this.setState({\n            typeComment: \"image\"\n        })\n    }\n\n  \n    render() {\n\n        return (\n            <Container centered>\n                <Card fluid>\n                    <div>\n                        <div className=\"container mt-auto ml-auto mr-auto mb\">\n                            <div class=\"row mt-5\">\n                                <div class=\"col-md-8 ml-auto mr-auto\">\n                                    <Card fluid>\n                                        <h5 class=\"card-header\">Welcome , what do you want to share today?</h5>\n                                        <div class=\"card-body\">\n                                            <form>\n                                                <div class=\"form-group\">\n                                                    <label for=\"wallInput\" class=\"sr-only\" placeholder=\"Write something\">Write something</label>\n                                                    <textarea class=\"form-control\" id=\"wallInput\" rows=\"2\" name=\"description\" placeholder=\"Write your comment here \"\n                                                        onChange={(e) => this.handleTextChange(e)}></textarea>\n                                                </div>\n\n                                               \n                                            </form>\n                                        \n\n                                            <div class=\"float-right \">\n                                                <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                    <button onClick={() => this.handleButtonText()} type=\"button\" class=\"btn btn-secondary\"><i class=\"fas fa-pencil-alt\"></i> Text</button>\n                                                    {/* <button onClick={() => this.handleButtonImage()} type=\"button\" class=\"btn btn-secondary\"><i class=\"far fa-image\"></i> Photo</button> */}\n                                                    <button onClick={() => this.handleButtonVideo()} type=\"button\" class=\"btn btn-secondary\"><i class=\"fas fa-video\"></i> Video</button>\n                                                </div>\n                                               \n                                                <div className=\"container-fluid\">\n                                            <button className=\"btn btn-warning\"\n                                                    onClick={() => this.sendComment()}\n                                                >\n                                                    Post\n                                                 </button>\n\n                                            </div>\n                                            </div>\n                            \n                                        </div>\n                                    </Card>\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"comment-list mb-5\">\n\n                            {\n                                this.state.feeds.map((elem) => {\n                                    return (\n                                        <CommentPanel addComment={this.addComment} feed={elem} />\n                                    )\n                                })\n                            }\n\n                        </div>\n                    </div>\n\n                </Card>\n            </Container>\n\n        )\n    }\n}\n\nexport default Feed\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { API_URL } from '../config'\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image, Container } from 'semantic-ui-react'\nimport moment from 'moment' //for do the format of the date\n\n\n\nclass UserProfile extends Component {\n\n    state = {\n        user: {}\n    }\n\n    componentDidMount() {\n        //aqui voy a colocar la ruta que conecte al backend, aqui va el axios con el /user\n        this.getUser();\n    }\n\n    getUser() {\n\n        axios.get(`${API_URL}/profile`, { withCredentials: true })\n            .then((res) => {\n                console.log('+++++++++++++++++++++++++++++++++++++++', res.data)\n                this.setState({\n                    user: res.data\n                })\n\n            })\n            .catch((err) => {\n                console.error('An error ocurred: ' + err);\n            })\n    }\n\n    handleDelete = (id) => {\n        axios.delete(`${API_URL}/profile/delete`, { withCredentials: true })\n            .then(() => {\n                // console.log(this.state.user)\n                // let filteredUser = this.state.user.filter((user) => {\n                //     return user._id !== user.session.loggedInUser._id\n                // })\n\n                this.setState({\n                    user: null\n                })\n\n                this.props.history.push('/')\n            })\n    }\n\n\n    render() {\n        console.log(this.state.user)\n        return (\n            <Container fluid margin>\n                {this.state.user &&\n                    <Card centered margin>\n                        <Image src={this.state.user.userAvatar} wrapped ui={false} />\n                        <Card.Content>\n                            <Card.Header> {this.state.user.username}</Card.Header>\n                            <Card.Meta>\n                                <span className='date'>Joined in {moment(this.state.user.createdAt).format('DD/MM/YYYY')}</span>\n                            </Card.Meta>\n                            <Card.Description>\n                                Email: {this.state.user.email}\n                                <br></br>\n                            City: {this.state.user.city}\n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n\n                            <Icon name='user' />\n                            {/* 22 Friends */}\n\n                        </Card.Content>\n                        <Link to=\"/user/edit\">\n                            <button type=\"button\" class=\"btn btn-warning\">Edit Profile</button>\n                        </Link>\n\n\n                        <button className=\"btn btn-dark mt-3\" onClick={() => this.handleDelete()} > Delete Profile </button>\n\n                    </Card>\n                }\n            </Container>\n        )\n\n\n    }\n}\n\nexport default UserProfile","import React from 'react';\nimport axios from 'axios'\nimport { API_URL } from '../config'\nimport { Redirect } from 'react-router-dom';\nimport { Responsive, Segment } from 'semantic-ui-react'\n\n\nexport default class EditEvent extends React.Component {\n\n    state = {\n        event: this.props.event\n    }\n    componentDidMount() {\n        // axios.get(`${API_URL}/events`, { withCredentials: true })\n        //     .then((res) => {\n        //         this.setState({\n        //             event: res.data\n        //         })\n        //     })\n        \n    }\n\n    handleEdit = (e) => {\n        console.log(this.state.event)\n        e.preventDefault();\n        axios.put(`${API_URL}/event/${ this.state.event._id }/edit`, {\n            name: this.state.event.name,\n            topics: this.state.event.topics,\n            image: this.state.event.image,\n            city: this.state.event.city\n        }, { withCredentials: true })\n            .then((res) => {\n                console.log(res)\n                this.props.onClose() //para que se cierre el form del edit, dinamico\n            });\n    }\n\n    handlenameChange = (e) => {\n        let eventEdited = JSON.parse(JSON.stringify(this.state.event))\n        eventEdited.name = e.target.value\n\n        this.setState({\n            event: eventEdited\n        })\n    }\n\n    handletopicsChange = (e) => {\n        let eventEdited = JSON.parse(JSON.stringify(this.state.event))\n        eventEdited.topics = e.target.value\n\n        this.setState({\n            event: eventEdited\n        })\n    }\n\n    handleimageChange = (e) => {\n        let eventEdited = JSON.parse(JSON.stringify(this.state.event))\n        eventEdited.image = e.target.value\n\n        this.setState({\n            event: eventEdited\n        })\n    }\n\n    handleCityChange = (e) => {\n        let eventEdited = JSON.parse(JSON.stringify(this.state.event))\n        eventEdited.city = e.target.value\n\n        this.setState({\n            event: eventEdited\n        })\n    }\n\n    render() {\n \n        const { name, topics, image, city } = this.state.event\n        return (\n            <>\n                <Responsive as={Segment} minWidth={320} maxWidth={2559}>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" class=\"form-control\"\n                            onChange={this.handlenameChange} name=\"name\" id=\"name\" value={name} />\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"topics\">Topics</label>\n                        <input type=\"text\" class=\"form-control\" onChange={this.handletopicsChange} name=\"topics\" id=\"topics\" value={topics} />\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"image\">Image</label>\n                        <input type=\"text\" class=\"form-control\" onChange={this.handleimageChange} name=\"image\" id=\"image\" value={image} />\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"city\">City</label>\n                        <input type=\"text\" class=\"form-control\" onChange={this.handleCityChange} name=\"city\" id=\"city\" value={city} />\n                    </div>\n\n                    <button type=\"button\" class=\"btn btn-danger\" onClick={this.handleEdit}>Edit event</button>\n\n                </Responsive>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { API_URL } from '../config'\nimport { Redirect, Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { Card, CardGroup, Button, ButtonGroup } from 'react-bootstrap'\nimport EditEvent from './EditEvent'\n\n// import SearchEvent from './SearchEvent'\n\n\nexport class Events extends Component {\n\n\n    state = {\n        events: [],\n        image: \"\",\n        filteredEvents: [],\n        loggedInUser: null,\n        showEditEvent: false,\n\n\n    }\n\n    //get the events\n\n    componentDidMount() {\n        this.getEvents();\n    }\n\n    showTheEvent() {\n        axios.post(`${API_URL}/event`, { withCredentials: true })\n            .then(() => {\n                return (\n                    <Redirect to='/EventCard' />\n                )\n            })\n            .catch((err) => {\n                console.log('An error ocurred: ' + err);\n            })\n    }\n\n\n    //when you edit a event, then get the event edited\n    getEvents() {\n        axios.get(`${API_URL}/events`, { withCredentials: true })\n            .then((res) => {\n                axios.get(`${API_URL}/user`, { withCredentials: true })\n                    .then((user) => {\n                        this.setState({\n                            events: res.data,\n                            filteredEvents: res.data,\n                            loggedInUser: user.data\n                        })\n                    })\n            })\n            .catch((err) => {\n                if (err.response.status === 401) {\n                    this.props.history.push('/')\n                }\n            })\n\n    }\n\n\n    //search by city, name or topic\n\n    handleSearch = (e) => {\n        // e.preventDefault(e)\n\n        let searchText = e.currentTarget.value\n        let filteredAll = this.state.events.filter((event) => {\n            console.log(event)\n            return (\n\n                event.city.toLowerCase().includes(searchText.toLowerCase())\n                || event.name.toLowerCase().includes(searchText.toLowerCase()) ||\n                event.topics.toLowerCase().includes(searchText.toLowerCase())\n            )\n        })\n        this.setState({\n            filteredEvents: filteredAll\n\n        })\n\n    }\n\n    //filter by event that i created \n    handleMyEvents = (e) => {\n        console.log(this.state.loggedInUser)\n        let filteredEvents = this.state.events.filter((event) => {\n            return event.createdby === this.state.loggedInUser._id\n        })\n        this.setState({\n            filteredEvents: filteredEvents\n\n        })\n    }\n\n    handleAllEvents = () => {\n        this.setState({\n            filteredEvents: this.state.events\n        })\n    }\n\n\n\n\n    handleDelete = (e) => {\n        // e.preventDefault()\n        console.log(e.target.getAttribute(\"data\"))\n        let id = e.target.getAttribute(\"data\")\n        axios.delete(`${API_URL}/event/${id}/delete`, { withCredentials: true })\n            .then(() => {\n\n\n                this.getEvents()\n            })\n    }\n\n    //Edit a event that you created \n\n    handleEdit = (event) => {\n        console.log(event)\n        this.setState({\n            showEditEvent: true,\n        })\n\n\n    }\n\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"mt-3\">\n\n\n                <nav class=\"navbar navbar-light bg-light justify-content-between\">\n                    <form class=\"form-inline\">\n                        <input type=\"text\" icon='search' placeholder=\"search an event\" aria-label=\"search\"\n                            className=\"input form-control mr-sm-2\"\n                            value={this.state.input}\n                            onChange={this.handleSearch}\n                        />\n\n                    </form>\n                \n                    <ButtonGroup aria-label=\"Basic example\">\n                        <Button variant=\"secondary\" onClick={this.handleMyEvents} >My Events</Button>\n                        <Button variant=\"secondary\"  onClick={this.handleAllEvents}>All the Events</Button>\n\n                    </ButtonGroup>\n\n                </nav>\n                <div className=\"mt-5 mb-5\">\n\n                    <Link to=\"/createvent\">\n                        <button type=\"button\" class=\"btn btn-warning\">Create new event</button>\n                    </Link>\n\n                </div>\n\n                {\n                    this.state.filteredEvents.map((elem) => {\n\n                        return (\n\n\n                            <div className>\n                                <CardGroup centered>\n                                    <Card centered>\n                                        <Card.Img variant=\"top\" src={elem.image} alt=\"\" />\n                                        <Card.Body>\n                                            <Card.Title>{elem.name}</Card.Title>\n                                            <Card.Text>\n                                                <h5>{moment(elem.date).format('DD/MM/YYYY')}</h5>\n                                                <h4>Topic of the day: {elem.topics}</h4>\n                                                <h4> <span>📍</span>{elem.city}</h4>\n\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <Card.Footer>\n\n                                            <Link to={`/event/${elem._id}`}>\n                                                <button type=\"button\" class=\"btn btn-outline-warning\">I am interested!</button>\n                                            </Link>\n                                        </Card.Footer>\n\n                                    </Card>\n                                </CardGroup>\n\n                                <div className=\"mt-4 mb-4\">\n\n\n                                    {/*Doing a conditional ternary for show the button only when the user created the event*/}\n                                    {\n                                        this.props.loggedInUser && this.props.loggedInUser._id === elem.createdby && (\n\n                                            <div>\n                                                <h5>You have been created this event!</h5>\n                                                <button data={elem._id} type=\"button\" class=\"btn btn-outline-warning\" onClick={this.handleDelete}>Delete</button>\n\n\n                                                <button type=\"button\" class=\"btn btn-outline-warning\" onClick={this.handleEdit}>Edit</button>\n\n\n\n\n                                            </div>\n\n                                        ) \n\n                                    }\n                                </div>\n                                {/*  con el showEditEvent hacemos que se muestre el form en el edit event, despues con el onclose hacemos que se cierre con lo que hemos editado guardandolo*/}\n                                {this.state.showEditEvent &&\n                                    <EditEvent\n                                        event={elem}\n                                        onClose={() => { this.setState({ showEditEvent: false }); this.getEvents() }}\n                                    />\n                                }\n                            </div>\n\n\n\n                        )\n                    })\n                }\n\n            </div >\n\n\n        )\n    }\n}\n\n\nexport default Events\n","import React from 'react';\nimport axios from 'axios'\nimport { API_URL } from '../config'\nimport { Redirect } from 'react-router-dom';\nimport { Responsive, Segment } from 'semantic-ui-react'\n\nexport default class EditProfile extends React.Component {\n\n    state = {\n        user: {}\n    }\n    componentDidMount() {\n        axios.get(`${API_URL}/profile`, { withCredentials: true })\n            .then((res) => {\n                this.setState({\n                    user: res.data\n                })\n            })\n    }\n\n    handleEdit = (e) => {\n        console.log(this.state.user)\n        e.preventDefault();\n        axios.put(`${API_URL}/profile/edit`, {\n            username: this.state.user.username,\n            email: this.state.user.email,\n            userAvatar: this.state.user.userAvatar,\n            city: this.state.user.city\n        }, { withCredentials: true })\n            .then((res) => {\n                console.log(res)\n                this.props.history.push(\"/user\");\n            });\n    }\n\n    handleUsernameChange = (e) => {\n        let userEdited = JSON.parse(JSON.stringify(this.state.user))\n        userEdited.username = e.target.value\n\n        this.setState({\n            user: userEdited\n        })\n    }\n\n    handleEmailChange = (e) => {\n        let userEdited = JSON.parse(JSON.stringify(this.state.user))\n        userEdited.email = e.target.value\n\n        this.setState({\n            user: userEdited\n        })\n    }\n\n    handleAvatarChange = (e) => {\n        let userEdited = JSON.parse(JSON.stringify(this.state.user))\n        userEdited.userAvatar = e.target.value\n\n        this.setState({\n            user: userEdited\n        })\n    }\n\n    handleCityChange = (e) => {\n        let userEdited = JSON.parse(JSON.stringify(this.state.user))\n        userEdited.city = e.target.value\n\n        this.setState({\n            user: userEdited\n        })\n    }\n\n    render() {\n        if (!this.props.loggedInUser) {\n            return <Redirect to='/signin' />\n        }\n        if (!this.state.user) {\n            return (\n                <div class=\"text-center\">\n                    <div class=\"spinner-border\" role=\"status\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )\n        }\n        const { username, email, userAvatar, city } = this.state.user\n        return (\n            <>\n                 <Responsive as={Segment} minWidth={320} maxWidth={2559}>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"name\">Username</label>\n                        <input type=\"text\" class=\"form-control\"\n                            onChange={this.handleUsernameChange} name=\"username\" id=\"username\" value={username} />\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" class=\"form-control\" onChange={this.handleEmailChange} name=\"email\" id=\"email\" value={email} />\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"userAvatar\">Avatar</label>\n                        <input type=\"text\" class=\"form-control\" onChange={this.handleAvatarChange} name=\"avatar\" id=\"avatar\" value={userAvatar} />\n                    </div>\n                    <div class=\"form-group\">\n                        <label htmlFor=\"city\">City</label>\n                        <input type=\"text\" class=\"form-control\" onChange={this.handleCityChange} name=\"city\" id=\"city\" value={city} />\n                    </div>\n\n                    <button type=\"button\" class=\"btn btn-warning\" onClick={this.handleEdit}>Edit Profile</button>\n\n                    </Responsive>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from \"axios\"\nimport { API_URL } from '../config';\nimport { Link } from 'react-router-dom';\nimport { Button, Modal } from 'react-bootstrap';\nimport { Card, Icon, Image, Grid, Container } from 'semantic-ui-react'\nimport moment from 'moment'\n\nexport class EventCard extends Component {\n  \n    state = {\n        event: { createdby: \"\" },\n        eventId: this.props.match.params.id,\n        show: false,\n        text: 'Attend event',\n    }\n    \n\n    componentDidMount() {\n        axios.get(`${API_URL}/event/${this.props.match.params.id}`, { withCredentials: true })\n            .then((res) => {\n                console.log(res)\n                this.setState({\n                    event: res.data\n                });\n            })\n            .catch(error => console.log(error))\n    }\n\n    //modal\n\n    handleClose = () =>\n        this.setState({\n            show: false\n        });\n\n    //added the text Attended for change the button when you press in Attend (Setted in the state)    \n\n    handleShow = () =>\n        this.setState({\n            show: true,\n            text: \"Attended\"\n           \n        });\n\n \n    render() {\n        return (\n\n            <div className=\"container mt-5\">\n\n                <Container fluid>\n                    <Card centered>\n\n                        <Image src=\n                        {this.state.event.image} wrapped ui={false} />\n                        <Card.Content>\n                            <h4>{moment(this.state.event.date).format('DD/MM/YYYY')}</h4>\n                            <Card.Header>{this.state.event.name}</Card.Header>\n                            <Card.Description> 📍 {this.state.event.place}, {this.state.event.city}</Card.Description>\n                            <Card.Meta>\n                                <h4>{this.state.event.topics}</h4>\n                                \n                            </Card.Meta>\n                            <Card.Description>\n\n                                <h5>{this.state.event.information}</h5>\n                                <span className='text'>Created by {this.state.event.createdby.username}</span>\n                                <span className='date'>- {moment(this.state.event.createdAt).format('DD/MM/YYYY')}</span>\n                               \n                            </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <a>\n                                <Icon name='user' />\n                                {this.state.event.numberOfPeople} \n                            </a>\n                        </Card.Content>\n                        \n                        <Button variant=\"primary\" onClick={this.handleShow}>\n                            {this.state.text}\n                        </Button>\n\n                    </Card>\n\n\n                </Container>\n         \n                <div>\n                    <Link to=\"/events\">\n                        <button type=\"button\" class=\"btn btn-warning\">Go Back</button>\n                    </Link>\n\n                </div>\n                <>\n\n                    <Modal show={this.state.show} onHide={this.handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Confirmation</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Woohoo, you're attending this event!</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\n                                Close\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n        )\n    }\n}\n\nexport default EventCard","import React, { Component } from 'react';\nimport { API_URL } from '../config';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'\nimport { Responsive, Segment } from 'semantic-ui-react'\nimport {Container, Row} from 'react-bootstrap'\n\n\nclass CreateEvent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            createdby: \"\",\n            place: \"\",\n            numberOfPeople: 0,\n            topics: \"\",\n            city: \"\",\n            image: null,\n            date: new Date(),\n            information: \"\",\n        };\n\n        this.onImageChange = this.onImageChange.bind(this);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { name, date, place, topics, numberOfPeople, city, image, information } = this.state;\n        axios.post(`${API_URL}/event/create`, { name: name, date: date, place: place, topics: topics, numberOfPeople: numberOfPeople, city: city, image: image, information: information }, { withCredentials: true })\n            .then(res => {\n                this.props.history.push('/events')\n            })\n\n    }\n\n    handleInput = e => {\n        console.log(e);\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    onImageChange = event => {\n        if (event.target.files && event.target.files[0]) {\n            let img = event.target.files[0];\n            this.setState({\n                image: URL.createObjectURL(img)\n            });\n        }\n    };\n\n\n    render() {\n        return (\n            <Responsive as={Segment} minWidth={320} maxWidth={2559}>\n                <form onSubmit={this.handleSubmit}>\n                    <Container fluid>\n                        <Row>\n                            <div className=\"form-group row mr-3 ml-3\">\n                                <label for=\"name\">Name</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"name\"\n                                    value={this.state.name}\n                                    onChange={this.handleInput}\n                                />\n                                <label for=\"Date\">Date</label>\n                                <input\n                                    type=\"date\"\n                                    name=\"date\"\n                                    value={this.state.date}\n                                    onChange={this.handleInput}\n                                    className=\"form-control\"\n                                />\n\n                                <label for=\"Topics\">Topics</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"topics\"\n                                    value={this.state.topics}\n                                    onChange={this.handleInput}\n                                    className=\"form-control\"\n                                />\n                                <label for=\"NumberOfPeople\">Number of people</label>\n                                <input\n                                    type=\"number\"\n                                    name='numberOfPeople'\n                                    className=\"form-control\"\n                                    value={this.state.numberOfPeople}\n                                    onChange={this.handleInput}\n                                />\n                                <label for=\"City\">City</label>\n                                <input\n                                    type=\"text\"\n                                    name=\"city\"\n                                    className=\"form-control\"\n                                    value={this.state.city}\n                                    onChange={this.handleInput}\n                                />\n                                <label for=\"Place\">Place </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"place\"\n                                    className=\"form-control\"\n                                    value={this.state.place}\n                                    onChange={this.handleInput}\n                                />\n                                <label for=\"Place\">Information </label>\n                                <input\n                                    type=\"information\"\n                                    name=\"information\"\n                                    className=\"form-control\"\n                                    value={this.state.information}\n                                    onChange={this.handleInput}\n                                />\n                                <label for=\"Image\">Image</label>\n                                <input\n                                    type=\"url\"\n                                    name=\"image\"\n                                    className=\"form-control\"\n                                    value={this.state.image}\n                                    onChange={this.handleInput}\n\n                                />\n                            </div>\n                        </Row>\n                    </Container>\n\n\n                    {/* <div class=\"custom-file mt-3\" >\n                        <input type=\"file\" class=\"custom-file-input\" id=\"image\"\n                            value={this.state.image}\n                            onChange={this.handleInput}\n                        />\n                        <label class=\"custom-file-label\" for=\"image\">Choose image</label>\n                        \n                    </div> */}\n                    {/* <div>\n                        <img src={this.state.image} alt=\"\" />\n                        <h5>Charge Image</h5>\n                        <input type=\"url\" name=\"myImage\" onChange={this.onImageChange} />\n                    </div> */}\n\n                    <button type=\"submit\" class=\"btn btn-warning mt-3\">Save</button>\n                </form>\n                <Link to=\"/events\">\n                    <button type=\"button\" className=\"btn btn-secondary mt-2\">Go back</button>\n                </Link>\n            </Responsive>\n        );\n    }\n}\n\n\nexport default CreateEvent;","import React, { Component } from 'react'\nimport {Grid, Header} from  'semantic-ui-react'\n\nexport class Footer extends Component {\n    render() {\n        return (\n          <>\n       \n            <Grid.Column width={7}>\n              <Header as='h4' inverted>\n                Footer Header\n              </Header>\n              <p>\n                {/* Extra space for a call to action inside the footer that could help re-engage users. */}\n              </p>\n            </Grid.Column>\n          </>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\nexport class NavBar extends Component {\n    render() {\n        return (\n            <div className=\"mb-4\">\n                <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                    <a className=\"navbar-brand\" href=\"/\">\n                        <img src=\"logo.png\" height=\"100\" className=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\" />\n\n                    </a>\n                    {/* <Navbar.Brand href=\"#home\">Welcome to Techie</Navbar.Brand> */}\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n\n\n\n                            {\n                                this.props.loggedInUser ? (\n                                    <>\n                                        <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\n                                            <NavDropdown.Item href=\"/user\">My Profile</NavDropdown.Item>\n                                            <NavDropdown.Divider />\n\n                                        </NavDropdown>\n                                        <Nav>\n                                            <Nav.Link href=\"/feed\">Feed</Nav.Link>\n                                            <Nav.Link href=\"/events\">Events</Nav.Link>\n                                     \n                                          \n                                        </Nav>\n\n                                        <button onClick={this.props.onLogout}>Logout</button>\n                                    </>\n                                ) : (\n                                        <>\n                                            <Nav>\n                                                <Nav.Link href=\"/signin\">Sign In</Nav.Link>\n                                                <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\n\n\n                                            </Nav>\n                                        </>)\n                            }\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\nexport default NavBar","import React from 'react';\n// import logo from './img/logo.png\nimport './App.css';\nimport SignIn from './components/SignIn'\nimport SignUp from './components/SignUp'\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css'\n// import MyNav from './components/MyNav'\nimport axios from 'axios'\nimport { API_URL } from './config'\nimport Home from './components/Home'\nimport Feed from './components/Feed'\nimport UserProfile from './components/UserProfile'\nimport Events from './components/Events'\nimport EditProfile from './components/EditProfile';\nimport EventCard from './components/EventCard'\nimport CreateEvent from './components/CreateEvent';\nimport Footer from './components/Footer'\nimport 'semantic-ui-css/semantic.min.css'\nimport NavBar from './components/NavBar'\nimport EditEvent from './components/EditEvent'\n\n\n\n\nclass App extends React.Component {\n\n  state = {\n    loggedInUser: null,\n\n  }\n\n  componentDidMount() {\n \n    if (!this.state.loggedInUser) {\n      axios.get(`${API_URL}/user`, { withCredentials: true })\n        .then((res) => {\n          this.setState({\n            loggedInUser: res.data\n          })\n        })\n    }\n  }\n\n  handleSignIn = (e) => {\n    e.preventDefault();\n    const { email, password } = e.currentTarget;\nconsole.log( '----------------------', email.value)\n    axios.post(`${API_URL}/signin`, {\n      email: email.value,\n      password: password.value\n    }, { withCredentials: true })\n      .then((res) => {\n        console.log(res)\n        this.setState({\n          loggedInUser: res.data\n        }, () => {\n          this.props.history.push('/user')  //redirect to the userprofile when you do a login\n        })\n      })\n      .catch((err) => {\n        console.log ('An error ocurred: ' + err);\n    })    \n  }\n\n\n  handleSignUp = (e) => {\n    e.preventDefault();\n    const { username, email, password } = e.currentTarget;\n\n    axios.post(`${API_URL}/signup`, {\n      username: username.value,\n      email: email.value,\n      password: password.value\n    }, { withCredentials: true })\n      .then((res) => {\n        console.log(res)\n        this.setState({\n          loggedInUser: res.data\n        }, () => {\n          this.props.history.push('/')\n        })\n      })\n      .catch((err) => {\n        console.log ('An error ocurred: ' + err);\n    })    \n  }\n\n  handleLogOut = (e) => {\n    axios.post(`${API_URL}/logout`, {}, { withCredentials: true })\n      .then(() => {\n        this.setState({\n          loggedInUser: null\n        }, () => {\n          this.props.history.push('/')\n        })\n      })\n  }\n\n\n  render() {\n    return (\n\n      <div className=\"App\">\n\n\n       \n        <NavBar loggedInUser={this.state.loggedInUser} onLogout={this.handleLogOut} >\n        </NavBar>\n        <Switch >\n          <Route exact path=\"/\" render={(routeProps) => {\n            return <Home {...routeProps} />\n          }} />\n          <Route exact path=\"/signin\" render={(routeProps) => {\n            return <SignIn onSignIn={this.handleSignIn} {...routeProps} />\n          }} />\n          <Route exact path=\"/signup\" render={(routeProps) => {\n            return <SignUp onSignUp={this.handleSignUp} {...routeProps} />\n          }} />\n          <Route exact path=\"/feed\" render={(routeProps) => {\n            return <Feed {...routeProps} />\n          }} />\n          <Route exact path=\"/user\" render={(routeProps) => {\n            return <UserProfile {...routeProps} />\n          }} />\n           <Route exact path=\"/user/edit\" render={(routeProps) => {\n            return <EditProfile loggedInUser={this.state.loggedInUser} {...routeProps} />\n          }} />\n           <Route exact path=\"/events\" render={(routeProps) => {\n            return <Events loggedInUser={this.state.loggedInUser} {...routeProps} />\n          }} />\n           <Route exact path=\"/createvent\" render={(routeProps) => {\n            return <CreateEvent {...routeProps} />\n          }} />\n           <Route exact path=\"/event/:id\" render={(routeProps) => {\n            return <EventCard {...routeProps} />\n          }} />\n           <Route exact path=\"/events/edit\" render={(routeProps) => {\n            return <EditEvent {...routeProps} />\n          }} />\n       \n\n          \n        \n   \n        </Switch>\n        <Footer/>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}